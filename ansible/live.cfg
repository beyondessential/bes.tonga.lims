[buildout]
extends =
    live.base.cfg

eggs +=
    Products.PrintingMailHost
    i18ndude
    pdbpp

parts +=
    i18ndude

environment-vars +=
    ENABLE_PRINTING_MAILHOST    False
    PTS_LANGUAGES               en to

always-checkout = true

# Override core's/plone's whatever default translations
# git@github.com:plone/plone.recipe.zope2instance#locales
locales = ${buildout:directory}/src/bes.tonga.lims/src/bes/tonga/lims/locales

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[zeoserver]
# By default, clients communicate with through a TCP/IP connection, that is
# defined in parameter `zeo-address`, that is declared in buildout's `zeoserver`
# and `client_base` parts. Nevertheless, ZEO supports a full path to a socket
# instead of an url. Let Zope clients communicate with ZEO over a socket, so at
# least no overhead as through the TCP connection.
zeo-address = ${buildout:var-dir}/zeoserver/zeo.socket
# Don't create a Data.fs.old before zeopack
#pack-keep-old = false

[client_base]
# Connect to zeoserver through a socket
zeo-address = ${zeoserver:zeo-address}
# Log level
event-log-level = ERROR
z2-log-level = ERROR
# RAM cache (num objects)
zodb-cache-size = 10000
# Persistent cache
zeo-client-cache-size = 256MB
zserver-threads = 4
# python /home/senaite/senaite/check_interval.py
python-check-interval = 7002
[client_reserved]
# Log level
event-log-level = INFO
